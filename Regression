{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/mohamedanasmkit/regresssion?scriptVersionId=172643655\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"38fc0b1b","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-04-18T08:54:40.25979Z","iopub.status.busy":"2024-04-18T08:54:40.258722Z","iopub.status.idle":"2024-04-18T08:54:41.297929Z","shell.execute_reply":"2024-04-18T08:54:41.296077Z"},"papermill":{"duration":1.049939,"end_time":"2024-04-18T08:54:41.30167","exception":false,"start_time":"2024-04-18T08:54:40.251731","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["/kaggle/input/playground-series-s4e4/sample_submission.csv\n","/kaggle/input/playground-series-s4e4/train.csv\n","/kaggle/input/playground-series-s4e4/test.csv\n"]}],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"markdown","id":"41032eb6","metadata":{"papermill":{"duration":0.00384,"end_time":"2024-04-18T08:54:41.310065","exception":false,"start_time":"2024-04-18T08:54:41.306225","status":"completed"},"tags":[]},"source":["**INSTALL REQUIREMENTS**"]},{"cell_type":"code","execution_count":2,"id":"aec17577","metadata":{"execution":{"iopub.execute_input":"2024-04-18T08:54:41.321026Z","iopub.status.busy":"2024-04-18T08:54:41.319705Z","iopub.status.idle":"2024-04-18T08:54:43.018469Z","shell.execute_reply":"2024-04-18T08:54:43.017397Z"},"papermill":{"duration":1.707008,"end_time":"2024-04-18T08:54:43.021204","exception":false,"start_time":"2024-04-18T08:54:41.314196","status":"completed"},"tags":[]},"outputs":[],"source":["import pandas as pd\n","from sklearn.tree import DecisionTreeRegressor \n","from sklearn.metrics import mean_squared_log_error"]},{"cell_type":"markdown","id":"9786b932","metadata":{"execution":{"iopub.execute_input":"2024-04-18T08:50:37.966605Z","iopub.status.busy":"2024-04-18T08:50:37.966005Z","iopub.status.idle":"2024-04-18T08:50:37.980231Z","shell.execute_reply":"2024-04-18T08:50:37.978378Z","shell.execute_reply.started":"2024-04-18T08:50:37.966518Z"},"papermill":{"duration":0.003846,"end_time":"2024-04-18T08:54:43.029418","exception":false,"start_time":"2024-04-18T08:54:43.025572","status":"completed"},"tags":[]},"source":["**IMPORT THE DATASET**"]},{"cell_type":"code","execution_count":3,"id":"6009eed5","metadata":{"execution":{"iopub.execute_input":"2024-04-18T08:54:43.039185Z","iopub.status.busy":"2024-04-18T08:54:43.038744Z","iopub.status.idle":"2024-04-18T08:54:43.207446Z","shell.execute_reply":"2024-04-18T08:54:43.205254Z"},"papermill":{"duration":0.17704,"end_time":"2024-04-18T08:54:43.210535","exception":false,"start_time":"2024-04-18T08:54:43.033495","status":"completed"},"tags":[]},"outputs":[],"source":["df = pd.read_csv(\"/kaggle/input/playground-series-s4e4/train.csv\")"]},{"cell_type":"code","execution_count":4,"id":"77b56374","metadata":{"execution":{"iopub.execute_input":"2024-04-18T08:54:43.22175Z","iopub.status.busy":"2024-04-18T08:54:43.22123Z","iopub.status.idle":"2024-04-18T08:54:43.250028Z","shell.execute_reply":"2024-04-18T08:54:43.24884Z"},"papermill":{"duration":0.03828,"end_time":"2024-04-18T08:54:43.253223","exception":false,"start_time":"2024-04-18T08:54:43.214943","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>Sex</th>\n","      <th>Length</th>\n","      <th>Diameter</th>\n","      <th>Height</th>\n","      <th>Whole weight</th>\n","      <th>Whole weight.1</th>\n","      <th>Whole weight.2</th>\n","      <th>Shell weight</th>\n","      <th>Rings</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>F</td>\n","      <td>0.550</td>\n","      <td>0.430</td>\n","      <td>0.150</td>\n","      <td>0.7715</td>\n","      <td>0.3285</td>\n","      <td>0.1465</td>\n","      <td>0.2400</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>F</td>\n","      <td>0.630</td>\n","      <td>0.490</td>\n","      <td>0.145</td>\n","      <td>1.1300</td>\n","      <td>0.4580</td>\n","      <td>0.2765</td>\n","      <td>0.3200</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>I</td>\n","      <td>0.160</td>\n","      <td>0.110</td>\n","      <td>0.025</td>\n","      <td>0.0210</td>\n","      <td>0.0055</td>\n","      <td>0.0030</td>\n","      <td>0.0050</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>M</td>\n","      <td>0.595</td>\n","      <td>0.475</td>\n","      <td>0.150</td>\n","      <td>0.9145</td>\n","      <td>0.3755</td>\n","      <td>0.2055</td>\n","      <td>0.2500</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>I</td>\n","      <td>0.555</td>\n","      <td>0.425</td>\n","      <td>0.130</td>\n","      <td>0.7820</td>\n","      <td>0.3695</td>\n","      <td>0.1600</td>\n","      <td>0.1975</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id Sex  Length  Diameter  Height  Whole weight  Whole weight.1  \\\n","0   0   F   0.550     0.430   0.150        0.7715          0.3285   \n","1   1   F   0.630     0.490   0.145        1.1300          0.4580   \n","2   2   I   0.160     0.110   0.025        0.0210          0.0055   \n","3   3   M   0.595     0.475   0.150        0.9145          0.3755   \n","4   4   I   0.555     0.425   0.130        0.7820          0.3695   \n","\n","   Whole weight.2  Shell weight  Rings  \n","0          0.1465        0.2400     11  \n","1          0.2765        0.3200     11  \n","2          0.0030        0.0050      6  \n","3          0.2055        0.2500     10  \n","4          0.1600        0.1975      9  "]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["df.head()"]},{"cell_type":"code","execution_count":5,"id":"bbdcfccd","metadata":{"execution":{"iopub.execute_input":"2024-04-18T08:54:43.267202Z","iopub.status.busy":"2024-04-18T08:54:43.266705Z","iopub.status.idle":"2024-04-18T08:54:43.308441Z","shell.execute_reply":"2024-04-18T08:54:43.307433Z"},"papermill":{"duration":0.052324,"end_time":"2024-04-18T08:54:43.311314","exception":false,"start_time":"2024-04-18T08:54:43.25899","status":"completed"},"tags":[]},"outputs":[],"source":["df = pd.get_dummies(df, columns = ['Sex'])"]},{"cell_type":"code","execution_count":6,"id":"33cd7a81","metadata":{"execution":{"iopub.execute_input":"2024-04-18T08:54:43.322906Z","iopub.status.busy":"2024-04-18T08:54:43.322219Z","iopub.status.idle":"2024-04-18T08:54:43.340942Z","shell.execute_reply":"2024-04-18T08:54:43.339216Z"},"papermill":{"duration":0.028166,"end_time":"2024-04-18T08:54:43.344027","exception":false,"start_time":"2024-04-18T08:54:43.315861","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>Length</th>\n","      <th>Diameter</th>\n","      <th>Height</th>\n","      <th>Whole weight</th>\n","      <th>Whole weight.1</th>\n","      <th>Whole weight.2</th>\n","      <th>Shell weight</th>\n","      <th>Rings</th>\n","      <th>Sex_F</th>\n","      <th>Sex_I</th>\n","      <th>Sex_M</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.550</td>\n","      <td>0.430</td>\n","      <td>0.150</td>\n","      <td>0.7715</td>\n","      <td>0.3285</td>\n","      <td>0.1465</td>\n","      <td>0.2400</td>\n","      <td>11</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.630</td>\n","      <td>0.490</td>\n","      <td>0.145</td>\n","      <td>1.1300</td>\n","      <td>0.4580</td>\n","      <td>0.2765</td>\n","      <td>0.3200</td>\n","      <td>11</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.160</td>\n","      <td>0.110</td>\n","      <td>0.025</td>\n","      <td>0.0210</td>\n","      <td>0.0055</td>\n","      <td>0.0030</td>\n","      <td>0.0050</td>\n","      <td>6</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0.595</td>\n","      <td>0.475</td>\n","      <td>0.150</td>\n","      <td>0.9145</td>\n","      <td>0.3755</td>\n","      <td>0.2055</td>\n","      <td>0.2500</td>\n","      <td>10</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0.555</td>\n","      <td>0.425</td>\n","      <td>0.130</td>\n","      <td>0.7820</td>\n","      <td>0.3695</td>\n","      <td>0.1600</td>\n","      <td>0.1975</td>\n","      <td>9</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id  Length  Diameter  Height  Whole weight  Whole weight.1  Whole weight.2  \\\n","0   0   0.550     0.430   0.150        0.7715          0.3285          0.1465   \n","1   1   0.630     0.490   0.145        1.1300          0.4580          0.2765   \n","2   2   0.160     0.110   0.025        0.0210          0.0055          0.0030   \n","3   3   0.595     0.475   0.150        0.9145          0.3755          0.2055   \n","4   4   0.555     0.425   0.130        0.7820          0.3695          0.1600   \n","\n","   Shell weight  Rings  Sex_F  Sex_I  Sex_M  \n","0        0.2400     11   True  False  False  \n","1        0.3200     11   True  False  False  \n","2        0.0050      6  False   True  False  \n","3        0.2500     10  False  False   True  \n","4        0.1975      9  False   True  False  "]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["df.head()"]},{"cell_type":"code","execution_count":7,"id":"4cd37469","metadata":{"execution":{"iopub.execute_input":"2024-04-18T08:54:43.357205Z","iopub.status.busy":"2024-04-18T08:54:43.356742Z","iopub.status.idle":"2024-04-18T08:54:43.365608Z","shell.execute_reply":"2024-04-18T08:54:43.364008Z"},"papermill":{"duration":0.018273,"end_time":"2024-04-18T08:54:43.36861","exception":false,"start_time":"2024-04-18T08:54:43.350337","status":"completed"},"tags":[]},"outputs":[],"source":["x_train = df.drop(['Rings'], axis=1)\n","y_train = df['Rings']"]},{"cell_type":"code","execution_count":8,"id":"7d0800cf","metadata":{"execution":{"iopub.execute_input":"2024-04-18T08:54:43.381909Z","iopub.status.busy":"2024-04-18T08:54:43.381359Z","iopub.status.idle":"2024-04-18T08:54:44.413886Z","shell.execute_reply":"2024-04-18T08:54:44.412682Z"},"papermill":{"duration":1.042059,"end_time":"2024-04-18T08:54:44.416336","exception":false,"start_time":"2024-04-18T08:54:43.374277","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeRegressor(random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor(random_state=0)</pre></div></div></div></div></div>"],"text/plain":["DecisionTreeRegressor(random_state=0)"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["# Initializing the Decision Tree Regression model\n","model = DecisionTreeRegressor(random_state = 0)\n","\n","# Fitting the Decision Tree Regression model to the data\n","model.fit(x_train, y_train)"]},{"cell_type":"code","execution_count":9,"id":"5f614846","metadata":{"execution":{"iopub.execute_input":"2024-04-18T08:54:44.428457Z","iopub.status.busy":"2024-04-18T08:54:44.427736Z","iopub.status.idle":"2024-04-18T08:54:44.654591Z","shell.execute_reply":"2024-04-18T08:54:44.65366Z"},"papermill":{"duration":0.2357,"end_time":"2024-04-18T08:54:44.657028","exception":false,"start_time":"2024-04-18T08:54:44.421328","status":"completed"},"tags":[]},"outputs":[],"source":["x_test = pd.read_csv(\"/kaggle/input/playground-series-s4e4/test.csv\")\n","\n","x_test = pd.get_dummies(x_test, columns=['Sex'])\n","\n","y_pred = model.predict(x_test)"]},{"cell_type":"code","execution_count":10,"id":"bd74f667","metadata":{"execution":{"iopub.execute_input":"2024-04-18T08:54:44.66931Z","iopub.status.busy":"2024-04-18T08:54:44.66889Z","iopub.status.idle":"2024-04-18T08:54:44.675792Z","shell.execute_reply":"2024-04-18T08:54:44.674635Z"},"papermill":{"duration":0.015949,"end_time":"2024-04-18T08:54:44.678222","exception":false,"start_time":"2024-04-18T08:54:44.662273","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["array([12.,  9.,  9., ..., 10., 18.,  6.])"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["y_pred"]},{"cell_type":"code","execution_count":11,"id":"e240564c","metadata":{"execution":{"iopub.execute_input":"2024-04-18T08:54:44.689933Z","iopub.status.busy":"2024-04-18T08:54:44.689543Z","iopub.status.idle":"2024-04-18T08:54:44.750732Z","shell.execute_reply":"2024-04-18T08:54:44.749785Z"},"papermill":{"duration":0.070728,"end_time":"2024-04-18T08:54:44.754005","exception":false,"start_time":"2024-04-18T08:54:44.683277","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>Rings</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>90615</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>90616</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>90617</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>90618</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>90619</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>90620</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>90621</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>90622</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>90623</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>90624</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>90625</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>90626</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>90627</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>90628</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>90629</td>\n","      <td>6.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       id  Rings\n","0   90615   12.0\n","1   90616    9.0\n","2   90617    9.0\n","3   90618    9.0\n","4   90619   15.0\n","5   90620    8.0\n","6   90621   12.0\n","7   90622    8.0\n","8   90623    8.0\n","9   90624   11.0\n","10  90625    9.0\n","11  90626    7.0\n","12  90627   10.0\n","13  90628   12.0\n","14  90629    6.0"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["submission = pd.read_csv('/kaggle/input/playground-series-s4e4/sample_submission.csv')\n","submission['Rings'] = model.predict(x_test)\n","submission.head(15)"]},{"cell_type":"code","execution_count":12,"id":"2375ce23","metadata":{"execution":{"iopub.execute_input":"2024-04-18T08:54:44.775226Z","iopub.status.busy":"2024-04-18T08:54:44.772513Z","iopub.status.idle":"2024-04-18T08:54:44.871508Z","shell.execute_reply":"2024-04-18T08:54:44.870181Z"},"papermill":{"duration":0.113731,"end_time":"2024-04-18T08:54:44.874758","exception":false,"start_time":"2024-04-18T08:54:44.761027","status":"completed"},"tags":[]},"outputs":[],"source":["submission.to_csv('submission.csv', index=False)"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"databundleVersionId":8096274,"sourceId":72489,"sourceType":"competition"}],"dockerImageVersionId":30684,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":8.848158,"end_time":"2024-04-18T08:54:45.606257","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-04-18T08:54:36.758099","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}